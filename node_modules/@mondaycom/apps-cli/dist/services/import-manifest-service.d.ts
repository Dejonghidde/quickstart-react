/// <reference types="node" />
import { ListrTaskWrapper } from 'listr2';
import { ImportCommandTasksContext } from '../types/commands/manifest-import.js';
import { AppId, AppVersionId } from '../types/general/index.js';
export declare const uploadManifestTsk: (ctx: ImportCommandTasksContext, task: ListrTaskWrapper<ImportCommandTasksContext, any>) => Promise<void>;
export declare const processManifestTemplate: (manifestFilePath: string, allowMissingVariables?: boolean) => Promise<Record<string, any>>;
export declare const shouldCreateNewApp: (flags: {
    appId?: AppId;
    appVersionId?: AppVersionId;
    newApp?: boolean;
}) => Promise<boolean>;
export declare const shouldCreateNewAppVersion: (flags: {
    appId?: AppId;
    appVersionId?: AppVersionId;
    newApp?: boolean;
}) => Promise<boolean>;
export declare const uploadZippedManifest: (buffer: Buffer, options?: {
    appId?: AppId;
    appVersionId?: AppVersionId;
}) => Promise<{
    statusCode: number;
    headers: Record<string, string | string[]>;
}>;
